<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 5. Mapper 만들기 -> SQL 쿼리문을 작성하는 파일 -->
<!-- namespace : 현재 Mapper의 id를 그룹화 하는 속성 sql 태그의 id가 중복 될 수 있기 때문에 id를 잘 
	찾아갈 수 있도록 그룹화 주로 현재 Mapper파일의 경로를 작성 -->
<mapper namespace="com.smhrd.database.FriendMapper">

	<!-- 친구 추가 -->
	<insert id="Add" parameterType="Friend">
		INSERT INTO FRIEND VALUES (#{applicant},#{acceptor},'X')
	</insert>

	<!-- 중복확인 -->
	<update id="Set" parameterType="Friend">
		UPDATE FRIEND SET APPLICANT = #{applicant} , ACCEPTOR = #{acceptor} 
		WHERE APPLICANT = #{applicant} AND ACCEPTOR = #{acceptor}
	</update>

	<!-- 친구 요청 확인 -->
	<select id="Check" parameterType="String" resultType="Friend">
		SELECT * FROM FRIEND WHERE ACCEPTOR = #{id} AND MATCH = 'X'
	</select>

	<!-- 친구 수락 -->
	<update id="Accept1" parameterType="Friend">
		UPDATE FRIEND SET MATCH ='O' WHERE ACCEPTOR = #{applicant} AND APPLICANT = #{acceptor}
	</update>
	<insert id="Accept2" parameterType="Friend">
		INSERT INTO FRIEND VALUES (#{applicant},#{acceptor},'O')
	</insert>

	<!-- 친구 거절 -->
	<delete id="Reject" parameterType="Friend">
		DELETE FROM FRIEND WHERE APPLICANT = #{acceptor} AND ACCEPTOR = #{applicant}
	</delete>


	<!-- 친구 목록 -->
	<select id="All" resultType="Friend" parameterType="String">
		SELECT * FROM FRIEND WHERE ACCEPTOR = #{ACCEPTOR} AND MATCH='O'
	</select>


</mapper>